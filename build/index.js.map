{"version":3,"sources":["../src/index.js"],"names":["process","platform","require","config","app","use","req","res","next","header","superSecretApiKeys","env","APIKEYS","split","doEnterpriseLevelSecurityCheck","getRandom","min","max","Math","round","random","tihi","get","redirect","doh","json","message","quotes","query","console","log","charsWithQuotes","SaaSData","filter","char","Quotes","length","rChar","rQuote","Quote","Name","Picture","character","JSON","stringify","headers","apikey","EnterpriseLevelSecurityCheck","then","passed","search","Object","keys","send","queryProp","capitalize","queryText","decodeURIComponent","charResults","Promise","resolve","reject","includes","s","charAt","toUpperCase","slice","listen","PORT"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport SaaSData from './saasdata.json';\nimport express from 'express'; // framework\nimport morgan from 'morgan'; // request logger\nif (process.platform === \"darwin\") { require(\"dotenv\").config() }\nconst app = express() // express app\napp.use(morgan('tiny')) // morgan\n\n//CORS\napp.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    // Remember to have apikey here, else our enterprise-grade authorization-system will fail\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, apikey\");\n    next();\n});\n\n// MICKEY MOUSE ENTERPRISE-GRADE SECURITY AS A SERVICE\nconst superSecretApiKeys = process.env.APIKEYS.split(\",\")\nconst doEnterpriseLevelSecurityCheck = true;\nconst getRandom = (min, max) => Math.round((Math.random() * (max - min) + min))\n\n// TIHIaaS\nlet tihi = app.get('/tihi', (req, res) => {\n    res.redirect(\"https://www.youtube.com/watch?v=-Lez_WdX7Oc\") // Thanks, I hate it\n})\n\n// DaaS\nlet doh = app.get('/doh', (req, res) => { res.json({ message: \"D'oh!\" }) }) // D'oh!\n\nlet quotes = app.get('/quotes', (req, res) => {\n    if (req.query !== {}) {\n        console.log(\"getting random quote\")\n        // sensible - random by default\n        let charsWithQuotes = SaaSData.filter(char => char.Quotes.length)\n        let rChar = charsWithQuotes[getRandom(0, charsWithQuotes.length)]\n        let rQuote = rChar.Quotes[getRandom(0, rChar.Quotes.length)]\n        res.json({ Quote: rQuote, Name: rChar.Name, Picture: rChar.Picture })\n    } else {\n        console.log(req.query)\n    }\n})\n\n// character route\nlet character = app.get([\"/characters\", \"/api/characters\", \"/chars\"], (req, res) => {\n    console.log(`APIKEY: ${JSON.stringify(req.headers.apikey) || \"none\"}`)\n    EnterpriseLevelSecurityCheck(req, res).then(passed => {\n        if (!passed) return;\n        let search = req.query;\n        console.log(`queryprop: ${Object.keys(search)[0]}`)\n        if (!Object.keys(search)[0]) { res.send(`<h1>SaaS character-endpoint. Retrieve a character using ?name=[charactername] or ?id=[characterId] </h1>`) } else {\n            let queryProp = capitalize(Object.keys(search)[0])\n            let queryText = decodeURIComponent(search[queryProp])\n            let charResults = SaaSData.filter(char => { if (!char[queryProp]) { return false; } return char[queryProp] == queryText })\n            if (charResults.length) { res.send(JSON.stringify([...charResults])) }\n            else {\n                res.send(`No character with ${queryProp} ${queryText} in the SaaS-database`)\n            }\n        }\n    });\n})\n\nfunction EnterpriseLevelSecurityCheck(req, res) {\n    return new Promise((resolve, reject) => {\n        if (!doEnterpriseLevelSecurityCheck) { resolve(true); return; }\n        if (!req.headers.apikey) {\n            res.send(`NO API KEY SPECIFIED. ASK PUZZLEBART FOR ONE! We're all about sharing :D`)\n            resolve(false)\n        } else {\n            if (superSecretApiKeys.includes(req.headers.apikey)) { resolve(true) } else {\n                res.send(`WRONG API KEY SPECIFIED. ARE YOU HACKING???!`)\n                resolve(false)\n            }\n        }\n    })\n}\n\n// Stupid sexy jslint\nconst capitalize = (s) => { if (typeof s !== 'string') return ''; return s.charAt(0).toUpperCase() + s.slice(1) }\n\n\n// FRONT PAGE\napp.get('/', (req, res) => {\n    res.send(`<!DOCTYPE html>\n<html>\n<head>\n    <title>Simpsons as a Service</title>\n    <link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\"\n        rel=\"stylesheet\">\n    <meta name=\"twitter:card\" content=\"summary\">\n    <meta name=\"twitter:creator\" content=\"@Kimzter\">\n    <meta name=\"og:title\" content=\"Simpsons As A Service\">\n    <meta name=\"og:description\" content=\"SaaS provides a modern, RESTful, scalable API for Simpsons character data.\">\n    <script src=\"//code.jquery.com/jquery-3.1.1.min.js\" type=\"text/javascript\"></script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"hero-unit\">\n            <h1>SaaS</h1>\n            <h2>Simpsons As A Service</h2>\n            <p><em>v1.0.0</em></p>\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"content\" style=\"margin-left:50px;\">\n            <h2 id=\"introduction\">Introduction</h2>\n            <p>SaaS (Simpsons As A Service) provides a modern, RESTful, scalable way of getting Simpsons Character data</p>\n            <h2 id=\"api\">API</h2>\n            <h3 id=\"contentnegotiation\">Content Negotiation</h3>\n            <p>SaaS responds in JSON formatted text</p>\n            <h3 id=\"operations\">Operations</h3>\n            <table class=\"table\" id=\"ops\">\n                <tr>\n                    <th>Path</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>/version</td>\n                    <td>Returns the current SaaS version number.</td>\n                </tr>\n\n                <tr>\n                    <td>/characters</td>\n                    <td>The main character endpoint</td>\n                </tr>\n                <tr>\n                    <td>/doh</td>\n                    <td>D'oh! As A Service</td>\n                </tr>\n                <tr>\n                    <td>/quotes</td>\n                    <td>quotes from a character, should they have any</td>\n                </tr>\n                <tr>\n                    <td>/picture</td>\n                    <td>Returns the main character photo</td>\n                </tr>\n            </table>\n            <h3 id=\"operations\">Example usage</h3>\n            <p><b>cURL</b></p>\n            <code>curl -L \"http://saas.puzzlebart.no/characters?Name=Homer%20Simpson\" -H apikey:\"YOUR_API_KEY\"</code>\n            <br/>\n            <br/>\n            <p><b>fetch</b></p>\n            <code>await fetch(\"http://saas.puzzlebart.no/characters?Name=Homer%20Simpson\",{headers:{apikey:\"YOUR_API_KEY\"}}).then(d=>d.json().then(r=>r))</code>\n            <p></p>\n            <p><a href=\"https://github.com/puzzlebart/saas\">Fork us on github!</a></p>\n            <p>Created by <a href=\"https://twitter.com/Kimzter\">@Kimzter</a></p>\n        </div>\n    </div>\n</body>\n</html>\n`)\n}) // default route\n\n\napp.listen(process.env.PORT || '3000', () => console.log(`running on port ${process.env.PORT || '3000'}`))"],"file":"index.js"}