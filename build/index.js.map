{"version":3,"sources":["../src/index.js"],"names":["app","use","get","req","res","send","doh","json","message","character","search","query","queryProp","Object","keys","console","log","toString","toLowerCase","nameQuery","decodeURIComponent","SaaSData","filter","char","length","JSON","stringify","listen","process","env","PORT"],"mappings":";;AAAA;;AACA;;AACA;;;;AAF+B;AACF;AAE7B,IAAMA,GAAG,GAAG,uBAAZ,C,CAAsB;;AACtBA,GAAG,CAACC,GAAJ,CAAQ,qBAAO,MAAP,CAAR,E,CAAwB;AAExB;;AAEAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAEA,EAAAA,GAAG,CAACC,IAAJ;AAAmD,CAAhF,E,CAAkF;AAElF;;AACA,IAAIC,GAAG,GAAGN,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAEA,EAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT;AAAgC,CAAhE,CAAV,C,CAA4E;;AAE5E,IAAIC,SAAS,GAAGT,GAAG,CAACE,GAAJ,CAAQ,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,QAAnC,CAAR,EAAsD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChF,MAAIM,MAAM,GAAGP,GAAG,CAACQ,KAAjB;AACA,MAAIC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB,CAApB,CAAhB;AACAK,EAAAA,OAAO,CAACC,GAAR,sBAA0BJ,SAA1B;;AACA,MAAI,CAACA,SAAL,EAAgB;AAAER,IAAAA,GAAG,CAACC,IAAJ;AAAiG,GAAnH,MAAyH;AACrH;AACA,QAAIO,SAAS,CAACK,QAAV,GAAqBC,WAArB,OAAuC,MAA3C,EAAmD;AAC/C,UAAIC,SAAS,GAAGC,kBAAkB,CAACV,MAAM,CAACE,SAAD,CAAN,CAAkBM,WAAlB,EAAD,CAAlC;;AACA,UAAIT,UAAS,GAAGY,kBAASC,MAAT,CAAgB,UAAAC,IAAI,EAAI;AAAE,YAAI,CAACA,IAAI,CAACX,SAAD,CAAT,EAAsB;AAAE,iBAAO,KAAP;AAAe;;AAAC,eAAOW,IAAI,CAACX,SAAD,CAAJ,CAAgBM,WAAhB,OAAkCC,SAAzC;AAAoD,OAAtH,CAAhB;;AACA,UAAIV,UAAS,CAACe,MAAd,EAAsB;AAClBpB,QAAAA,GAAG,CAACC,IAAJ,CAASoB,IAAI,CAACC,SAAL,CAAejB,UAAS,CAAC,CAAD,CAAxB,CAAT;AACH,OAFD,MAEO;AACHL,QAAAA,GAAG,CAACC,IAAJ,sCAAuCc,SAAvC;AACH;AACJ;AACJ;AACJ,CAhBe,CAAhB,C,CAiBA;;AAEAnB,GAAG,CAAC2B,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,MAA/B,EAAuC;AAAA,SAAMf,OAAO,CAACC,GAAR,2BAA+BY,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,MAAnD,EAAN;AAAA,CAAvC,E,CAA2G","sourcesContent":["import express from 'express'; // framework\nimport morgan from 'morgan'; // request logger\nimport SaaSData from './saasdata.json';\nconst app = express() // express app \napp.use(morgan('tiny')) // morgan\n\n// <ENDPOINTS>\n\napp.get('/', (req, res) => { res.send(`<h1>SaaS - Simpsons as a Service</h1>`) }) // default route\n\n// DaaS\nlet doh = app.get('/doh', (req, res) => { res.json({ message: \"D'oh!\" }) }) // D'oh!\n\nlet character = app.get([\"/characters\", \"/api/characters\", \"/chars\"], (req, res) => {\n    let search = req.query;\n    let queryProp = Object.keys(search)[0]\n    console.log(`queryprop: ${queryProp}`)\n    if (!queryProp) { res.send(`<h1>SaaS character-endpoint. Retrieve a character using ?name=[charactername] </h1>`) } else {\n        // Name search\n        if (queryProp.toString().toLowerCase() === \"name\") {\n            let nameQuery = decodeURIComponent(search[queryProp].toLowerCase())\n            let character = SaaSData.filter(char => { if (!char[queryProp]) { return false; } return char[queryProp].toLowerCase() === nameQuery })\n            if (character.length) {\n                res.send(JSON.stringify(character[0]))\n            } else {\n                res.send(`No character with the name ${nameQuery} in the SaaS-database`)\n            }\n        }\n    }\n})\n// </ENDPOINTS>\n\napp.listen(process.env.PORT || '3000', () => console.log(`running on port ${process.env.PORT || '3000'}`)) // starting \n"],"file":"index.js"}